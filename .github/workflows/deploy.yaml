# name: deploy backend
# on:
#   push:
#     branches:
#       - main

# jobs:
#   deploy:
#     runs-on: ubuntu-latest # 작업이 실행될 환경
#     steps:
#       - name: checkout
#         uses: actions/checkout@v3
#       - name: JDK 17
#         uses: actions/setup-java@v3
#         with:
#           java-version: '17'
#           distribution: 'temurin'
#       - name: Gradle Wrapper 실행 권한 추가
#         run: chmod +x ./backend/geniuses/gradlew
#       - name: 환경변수 설정
#         run: echo "${{ secrets.APPLICATION_YML_BACKEND}}" > backend/geniuses/src/main/resources/application.yml
#         working-directory: ./backend/geniuses/server/linode-github-action-test
#       - name: Gradle로 빌드(CI)
#         run: ./backend/geniuses/gradlew build
      
#       # docker login
#       - run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
#       - run: docker build -t vlog-test-back-1020 ./backend/geniuses
#       - run: docker push vlog-test-back-1020

#       - name: Generate deployment package
#         run: zip -r deploy.zip ./backend/geniuses -x '*.git*'

#       - name: Deploy to EB
#         uses: einaregilsson/beanstalk-deploy@v18
#         with:
#           # AWS
#           aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
#           aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
#           # AWS Elastic Beanstalk 환경 application 명
#           application_name: vlog-test
#           # AWS Elastic Beanstalk 환경 명
#           environment_name: Vlog-test-env
#           # AWS S3 버킷 명
#           existing_bucket_name: elasticbeanstalk-us-east-2-646588460992
#           region: us-east-2
#           version_label: ${{ github.sha }}
#           deployment_package: deploy.zip ./backend/geniuses
#           wait_for_environment_recovery: 500

#       - uses: actions/checkout@v3
#         # docker login
#       - run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
#       - run: docker build -t vlog-test-front-1020 ./frontend/geniuses
#       - run: docker push vlog-test-front-1020

#       - name: Generate deployment package
#         run: zip -r deploy.zip ./frontend/geniuses -x '*.git*'

#       - name: Deploy to EB
#         uses: einaregilsson/beanstalk-deploy@v18
#         with:
#           # AWS
#           aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
#           aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
#           # AWS Elastic Beanstalk 환경 application 명
#           application_name: vlog-test
#           # AWS Elastic Beanstalk 환경 명
#           environment_name: Vlog-test-env
#           # AWS S3 버킷 명
#           existing_bucket_name: elasticbeanstalk-us-east-2-646588460992
#           region: us-east-2
#           version_label: ${{ github.sha }}
#           deployment_package: deploy.zip ./frontend/geniuses
#           wait_for_environment_recovery: 500

name: Deploy Frontend
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # docker login
      - run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - run: docker build -t vlog-frontend -f Dockerfile.dev ./frontend/geniuses
      - run: docker run -e CI=true vlog-frontend npm test

      - name: Generate deployment package
        run: zip -r deploy.zip . -x '*.git*'

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v18
        with:
          # AWS
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          # AWS Elastic Beanstalk 환경 application 명
          application_name: vlog-test
          # AWS Elastic Beanstalk 환경 명
          environment_name: Vlog-test-env
          # AWS S3 버킷 명
          existing_bucket_name: elasticbeanstalk-us-east-2-646588460992
          region: us-east-2
          version_label: ${{ github.sha }}
          deployment_package: deploy.zip
          wait_for_environment_recovery: 500